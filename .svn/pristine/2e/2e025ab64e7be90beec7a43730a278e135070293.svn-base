/**
 * SKIMP-FR-013.js
 * @ 업데이트
 * 2021.05.24
 */
var pageInit = function(evt){
	pageEvent();

	categoryListSearch(evt);
};

var pageEvent = function(){

	//앱 상세 이동
	$(document).on('click', 'ul li div', function(){
		MPage.html({
			url : 'SKIMP-FR-014.html',
			param : {
				appNo : $(this).attr('data-appNo'),
			}
		});
	});

	//footer 페이지 이동
	$(document).on('click', '#btnFooter button', function(){
		var thisId = $(this).attr('id');
		var thisPageUrl = "";

		if(thisId == "btnGroup"){
			thisPageUrl = "SKIMP-FR-007.html";
		}else if(thisId == "btnUpdate"){
			thisPageUrl = "SKIMP-FR-013.html";
		}else if(thisId == "btnNotice"){
			thisPageUrl = "SKIMP-FR-015.html";
		}else if(thisId == "btnSetting"){
			thisPageUrl = "SKIMP-FR-017.html";
		}

		if(thisId != "btnUpdate"){
			MPage.html({
				url : thisPageUrl,
				animation : "NONE",
			})
		}
	});

};


//카테고리 목록 조회
var categoryListSearch = function(evt){
	MNet.httpSend({
		path : "api/category/list",
		sendData : {
			parent_cate_cd: 'STORE',
		},
		callback : function(rst, setting){
			console.log(rst);
			categoryList = getListPopArr(rst.list, "cate_nm", "cate_cd");
			categoryList.unshift({"title" : "전체", "value" : ""});

			var categoryHtml = '';
			rst.list.forEach((item, idx) => {
				categoryHtml += '<h3 data-cate-cd="'+item.cate_cd+'">'+item.cate_nm+'</h3>'
				categoryHtml += '<ul>'
				categoryHtml += '</ul>'
			});
			$('#appList').append(categoryHtml);

			appListSearch(evt);
		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
}



//앱 목록 조회
var appListSearch = function(evt){
	//os ios : 2, aos : 1
	var deviceOS = MNavigator.device("ios") ? "2" : "1";

	MNet.httpSend({
		path : "skimp/common/api/SKIMP-0005",
		sendData : {
			userId: MData.storage('encData').userId,
			platIdx : deviceOS,
		},
		callback : function(rst, setting){
			console.log(rst);

			var appList = rst.appInfoList;
			var appListHtml = '';
			var appsInfo = addAppStatus(appList, evt.os);
			var updateAppCnt = 0;

			$('#appCnt').text(StringUtil.addComma(appList.length));
			appsInfo.forEach((item, idx) => {
				//앱 설치여부에 따른 분기
				if(item.app_installed == true){
					//현재버전과 설치버전이 같으면 설치됨, 다르면 업데이트
					if( appVerCompare(item.app_ver, item.installed_ver) ){
//							appListHtml += '	<button class="btn-installed">설치됨</button>';
					}else{
						appListHtml += '<li>';
						appListHtml += '	<img src="'+item.icon_app_bic_url+'" alt="">';
						appListHtml += "	<div data-appNo='"+item.app_no+"'>";
						appListHtml += '		<p class="title">'+item.app_nm+'</p>';
						appListHtml += '		<p class="txt">'+item.app_info+'</p>';
						appListHtml += '	</div>';
						appListHtml += '	<button class="btn-update" data-install-Url="'+item.bin_url+'" data-appNm="'+item.app_nm+'">업데이트</button>';
						appListHtml += '</li>';
						updateAppCnt += 1;
					}
				}



				//앱의 카테고리 별로 분리해서 리스트를 보여줌
				for(var i=0; i<$('#appList h3').length; i++){
					if($('#appList h3').eq(i).attr('data-cate-cd') == item.cate_cd){
						$('#appList h3').eq(i).next('ul').append(appListHtml);
						appListHtml = '';

						break;
					}
				}
			});

			$('#updateAppCnt').text(StringUtil.addComma(updateAppCnt));
		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
}



var MStatus = {
		onReady : function(evt){
			pageInit(evt);
		},

//		onBack : function(){
//
//		},

		onRestore : function(){

		},

		onHide : function(){

		},

		onDestroy : function(){

		},

		onPause : function(){

		},

		onResume : function(){

		}
}