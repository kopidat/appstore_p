/**
 * @파일명 : common.js
 * @생성일 : 2021.05.21
 * @작성자 : 김동창
 */

var commUI = function(){
	//뒤로가기
	$(document).on('click', '.prev', function(){
		M.page.back();
	});
}


//LayerPopup 오픈
var openPopup = function(layerId, afterFunction){
   	$("#"+layerId).remove();
   	$.get('Popup.html', function(item){
   		let templateHtml = $('<div></div>').append(item);
   		$('body').append( templateHtml.find('#'+layerId) );
   		if (afterFunction!=undefined && typeof afterFunction == "function") {
   			afterFunction();
   		}
   		layer_open(layerId);
   	});
}


//리스트 팝업에 맞게 데이터 변환
var getListPopArr = function(Arr, key, value) {
	var tmpArr = [];
	if(key || value) {
		for(var i = 0; i < Arr.length; i++){
			var tmpObj = {};
			tmpObj.title = Arr[i][key];
			tmpObj.value = Arr[i][value];
			tmpArr.push(tmpObj);
		}
	} else {
		for(var i = 0; i < Arr.length; i++){
			var tmpObj = {};
			tmpObj.title = Arr[i];
			tmpObj.value = Arr[i];
			tmpArr.push(tmpObj);
		}
	}

	return tmpArr;
};



//디바이스에 앱 설치여부, 설치된 앱 버전 정보를 앱 리스트에 추가
var addAppStatus = function(appList, os) {
    try {
        var appsInfo = appList || [];
        var os = os || 'ios';

        appList.forEach((item, idx) => {
        	if(os == "ios"){
        		appsInfo[idx].app_installed = M.apps.info(item.url_scheme).installed;

        		//ios 의 경우 타 앱의 버전을 가지고 올 수 없어서 조회된 앱정보의 버전을 storage 에 저장해두고 현재버전으로 사용
        		StringUtil.isEmpty(MData.storage(item.package_nm)) ? MData.storage(item.package_nm, item.app_ver) : "";
        		appsInfo[idx].installed_ver = MData.storage(item.package_nm);
        	}else{
				appsInfo[idx].app_installed = M.apps.info(item.package_nm).installed;
				appsInfo[idx].installed_ver = M.apps.info(item.package_nm).version;
        	}
        });
    }
    catch(e) {
        console.error(e);
        WNLog('JS Exception', e.toString());
    }
    return appsInfo;
}


//리스트의 앱 버전과 설치된 앱의 버전을 비교
var appVerCompare = function(currentVer, installedVer){
	var cVer = Number(currentVer.split('.').join());		//현재버전
	var iVer = Number(installedVer.split('.').join());		//설치된버전

	if(iVer < cVer){
		return false;
	}else{
		return true;
	}
}




//타이머 동작
var setTimer = function(){
	var timerSecond = StringUtil.isEmpty(MData.storage('timerSecond')) ? 60 : Number(MData.storage('timerSecond'));
	var timerMinute = StringUtil.isEmpty(MData.storage('timerMinute')) ? 4 : Number(MData.storage('timerMinute'));

    var timerStart = setInterval(function(){
		//60초가 될때마다 1분 감소
		if(timerSecond == 0){
			timerMinute -= 1;
			timerSecond = 60;
			$('.time').text("0"+timerMinute+":00");
		}

		timerSecond -= 1;

		//분, 초가 한자리 수 일 때, 0 붙여서 표기
		if(String(timerMinute).length == 1){
			if(String(timerSecond).length == 1){
				$('.time').text("0"+timerMinute+":0"+timerSecond);
			}else{
				$('.time').text("0"+timerMinute+":"+timerSecond);
			}
		}else{
			if(String(timerSecond).length == 1){
				$('.time').text(timerMinute+":0"+timerSecond);
			}else{
				$('.time').text(timerMinute+":"+timerSecond);
			}
		}

		$('.time').attr('timerMinute', timerMinute).attr('timerSecond', timerSecond);

		//0분이되면 타이머 종료
		if(timerMinute == 0 && timerSecond == 0){
			clearInterval(timerStart);
			MData.removeStorage('timerMinute');
			MData.removeStorage('timerSecond');
			MData.removeStorage('endTime');

			$('#layer02').remove();
		}

	}, 1000);
}




//문서변환 파일 업로드
var fileUploadTest = function(){
	var form = '<form id="uploadForm"></form/>';

	$('body').append(form);

	$('#uploadForm').append('<input type="file" name="file">');
	$('#uploadForm').attr('action', "http://dev-skimp.skinnovation.com/doc/file/upload?convertType=IMAGE&imageFormat=JPEG");

	var url = "http://dev-skimp.skinnovation.com/doc/file/upload";

	httpSend({
		url : url,
		method : "POST",
		formName : "uploadForm",
		contentType : false,
		callback : function(rst){
			console.log(rst);
			MData.global('docId', rst.id);
			fileConvertTest();
		}
	});
};


//문서변환 파일 컨버팅
var fileConvertTest = function(){
	var form = '<form id="convertForm"></form/>';
	var id = MData.global('docId');

	$('body').append(form);

	$('#convertForm').attr('action', "http://dev-skimp.skinnovation.com/doc/file/convert?id=19");

	var url = "http://dev-skimp.skinnovation.com/doc/file/convert/19";

	httpSend({
		url : url,
		method : "GET",
		formName : "convertForm",
		contentType : false,
		callback : function(rst){
			console.log(rst);
			if(rst.status != "S"){
				var start = setInterval(fileConvertTest, 1000);
			}else{
				clearInterval(start);


//				fileDownloadTest();
			}
		}
	});
}


//문서변환 파일정보 조회
var fileInfoTest = function(){
	var form = '<form id="infoForm"></form/>';
	var id = MData.global('docId');

	$('body').append(form);

	$('#uploadForm').append('<input type="file" name="file">');
	$('#infoForm').attr('action', "http://dev-skimp.skinnovation.com/doc/file/convert/info?id=22");

	var url = "http://dev-skimp.skinnovation.com/doc/file/convert/info?id=22";

	httpSend({
		url : url,
		method : "POST",
		formName : "infoForm",
		contentType : false,
		callback : function(rst){
			console.log(rst);

		}
	});
}


//문서변환 파일 다운로드
var fileDownloadTest = function(){
	var form = '<form id="downloadForm"></form/>';

	$('body').append(form);

//	$('#downloadForm').attr('action', "http://dev-skimp.skinnovation.com/doc/file/download");
	$('#downloadForm').append('<input type="hidden" name="stamp" value="o5VrQdO7SCYklQW90vasW9V8UzfQGXE5KW8suyFUbNDlfGZJIN17z2nmaie7x5Zx">');

	var url = "http://dev-skimp.skinnovation.com/doc/file/download/19/1.stream";

	httpSend({
		url : url,
		method : "POST",
		formName : "downloadForm",
		contentType : "multipart/form-data",
		callback : function(rst){
			console.log(rst);
		}
	})
}


//문서변환
var httpSend = function(opt){
	var form = $('#'+opt.formName)[0];
    var formData = new FormData(form);

    $.ajax({
    	crossOrigin : true,
        url: opt.url,
        data: formData,
        method: opt.method,
        contentType : opt.contentType,
        enctype : "multipart/form-data",
        dataType : 'json',
        processData : false,
        success : function (rst) {
            if(opt.callback){
            	$('#'+opt.formName).remove();
            	opt.callback(rst);
            };
        },
        error: function (err) {
        	console.log(err);
        	$('#'+opt.formName).remove();
            alert("실패하였습니다.");
        }
    });
}


//push receiver
var onReceiveNotification = function(rst){
	console.log(rst);
}


//ios 푸시 설정을 위해 추가 true 로 변경시 앱에서 푸시 수신 가능
M.plugin('push').remote.enabled(true);