/**
 * SKIMP-FR-015.js
 * @ 공지사항
 * 2021.05.24
 */

var fileConvertStamp = "";
var fileConvertId = "";

var pageInit = function(){
	pageEvent();

	notiListSearch();
};

var pageEvent = function(){

	//공지사항 내용보기
	$(document).on('click', '.notice-list > dl > dt', function(){
		if($(this).next().css('display') != 'none'){
			$(this).next().slideUp();
			$(this).removeClass('active');
		}else {
			$('.notice-list > dl > dd').slideUp();
			$(this).next().slideDown();
			$(this).addClass('active').parent().siblings('dl').find('dt.active').removeClass('active');
		}
		return false;
	});


	//첨부파일 열기
	$(document).on('click', '.btn-list button', function(){
		var fileName = $(this).attr('data-fileNm');
		var fileUrl = "https://dev-skimp.skinnovation.com/api/notice/download/"+$(this).attr('data-fileIdx');
		docUpload(fileName, fileUrl);
	});


	//footer 페이지 이동
	$(document).on('click', '#btnFooter button', function(){
		var thisId = $(this).attr('id');
		var thisPageUrl = "";

		if(thisId == "btnGroup"){
			thisPageUrl = "SKIMP-FR-007.html";
		}else if(thisId == "btnUpdate"){
			thisPageUrl = "SKIMP-FR-013.html";
		}else if(thisId == "btnNotice"){
			thisPageUrl = "SKIMP-FR-015.html";
		}else if(thisId == "btnSetting"){
			thisPageUrl = "SKIMP-FR-017.html";
		}

		if(thisId != "btnNotice"){
			MPage.html({
				url : thisPageUrl,
				animation : "NONE",
			})
		}
	});

};


var notiListSearch = function(){
	MNet.httpSend({
		path : "api/notice/get",
		sendData : {
			page_num: '1',
			page_size: '15',
		},
		callback : function(rst, setting){
			console.log(rst);

			var listHtml = '';
			var listData = rst.list;

			listData.forEach((item, idx) => {
				listHtml += '<dl>';
				listHtml += '	<dt>';

				if(StringUtil.isEmpty(item.file_IDX)){
					listHtml += '		<h3 class="">'+item.board_TITLE+'</h3>';
				}else{
					listHtml += '		<h3 class="file">'+item.board_TITLE+'</h3>';
				}

				listHtml += '		<p class="date">'+item.reg_DT+'</p>';
				listHtml += '	</dt>';
				listHtml += '	<dd style="display:none">';
				listHtml += '		<div class="notice-content">'+item.board_CONTENT+'</div>';
				listHtml += '		<div class="btn-list">';
				listHtml += '			<button class="btn-file w100p" data-fileNm="'+item.file_NAME+'" data-fileIdx="'+item.file_IDX+'"><span>'+item.file_NAME+'</span></button>';
				listHtml += '		</div>';
				listHtml += '	</dd>';
				listHtml += '</dl>';
			});

			$('#notiList').append(listHtml);
		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
}



var docUpload = function(fileName, fileUrl){
	MNet.httpSend({
		path : "skimp/common/api/SKIMP-0007",
		sendData : {
			fileName : fileName, //$('#fileNm').val(), "sample.pdf"
			url : fileUrl, //$('#fileUrl').val(),  "https://dev-skimp.skinnovation.com/img/sample.pdf"
			convertType	: "IMAGE",
			token : "",
			pakgId : "skimp.common.app.demo",
		},
		callback : function(rst, setting){
			console.log(rst);
			fileConvertStamp = rst.stamp;
			fileConvertId = rst.id;

			docConvertState();
		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
}

//문서변환 상태 확인
var docConvertState = function(){
	MNet.httpSend({
		path : "skimp/common/api/SKIMP-0010",
		sendData : {
			id : fileConvertId,
            token : "",
            pakgId : "skimp.common.app.demo",
		},
		callback : function(rst, setting){
			console.log(rst);
			docConvertInfo(rst);

		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
};


//문서변환 정보 확인
var docConvertInfo = function(){
	$('#indicator').removeClass('none');
	MNet.httpSend({
		path : "skimp/common/api/SKIMP-0011",
		sendData : {
			id : fileConvertId,
            token : "",
			pakgId : "skimp.common.app.demo",
		},
		indicator : false,
		callback : function(rst, setting){
			console.log(rst);

			if(rst.message == "성공" && rst.success == true){
				$('#indicator').addClass('none');
				MPage.html({
					url : "SKIMP-FR-020.html",
					param : {
						stamp : fileConvertStamp,
						id : fileConvertId,
						pageCnt : rst.page,
					}
				})
			}else{
				setTimeout(function(){
					docConvertInfo();
				}, 1000);

			}


		},
		errCallback : function(errCd, errMsg){
			console.log(errCd, errMsg);
		}
	});
}



var MStatus = {
		onReady : function(){
			pageInit();
		},

//		onBack : function(){
//
//		},

		onRestore : function(){

		},

		onHide : function(){

		},

		onDestroy : function(){

		},

		onPause : function(){

		},

		onResume : function(){

		}
}